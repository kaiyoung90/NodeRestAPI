~~POST~~

Description: Create a new certification type record
Endpoint: http://localhost:3002/api/v1/certtype/create-cert-type
Method: POST
Params: none
Request Payload:
{
    "field": "general"
}
Response:
{
    "message": "Success",
    "resp": {
        "data": {
            "id": 1,
            "field": "general",
            "active": true,
            "created_by": "kyoung",
            "updated_by": null,
            "created_at": "2019-04-24T22:58:39.402Z",
            "updated_at": "2019-04-24T22:58:39.402Z",
            "deleted_at": null
        },
        "statusCode": 200
    }
}

-------------------------------------
Description: Create a new certification record
Endpoint:http://localhost:3002/api/v1/cert/create-cert
Method: POST
Params: none
Request Payload:
{
	"name": "CompTIA A+",
	"description": "CompTIA A+ is the preferred qualifying credential for technical support and IT operational roles.",
	"validity": "3",
	"cert_type_id": 1
}
Response:
{
    "message": "Success",
    "resp": {
        "data": {
            "id": 2,
            "name": "CompTIA A+",
            "description": "CompTIA A+ is the preferred qualifying credential for technical support and IT operational roles.",
            "validity": "3",
            "cert_type_id": 1,
            "active": true,
            "created_by": "kyoung",
            "updated_by": null,
            "created_at": "2019-04-24T23:13:13.226Z",
            "updated_at": "2019-04-24T23:13:13.226Z",
            "deleted_at": null
        },
        "statusCode": 200
    }
}

---------------------------------------
Description: Create a new resource record
Endpoint: http://localhost:3002/api/v1/resource/create-resource
Method: POST
Params: none
Request Payload:
{
	"name": "CertMaster A+",
	"link": "www.google.com",
	"cert_id": 1
}
Response:
{
    "message": "Success",
    "resp": {
        "data": {
            "id": 1,
            "name": "CertMaster A+",
            "link": "www.google.com",
            "cert_id": 1,
            "active": true,
            "created_by": "kyoung",
            "updated_by": null,
            "created_at": "2019-04-24T23:17:08.897Z",
            "updated_at": "2019-04-24T23:17:08.897Z",
            "deleted_at": null
        },
        "statusCode": 200
    }
}

======================================
~~PUT~~

Description: Update a certification type record
Endpoint: http://localhost:3002/api/v1/certtype/update-cert-type/id/:id
Method: PUT
Params: id - id of the certification type
Request Payload:
{
	"field": "General IT"
}
Response:
{
    "message": "Success",
    "resp": {
        "data": {
            "id": 1,
            "field": "General IT",
            "active": true,
            "created_by": "kyoung",
            "updated_by": "kyoung",
            "created_at": "2019-04-24T22:58:39.402Z",
            "updated_at": "2019-04-24T23:42:47.687Z",
            "deleted_at": null
        },
        "statusCode": 200
    }
}

-------------------------------
Description: Update a certification record
Endpoint: http://localhost:3002/api/v1/cert/update-cert/id/:id
Method: PUT
Params: id - id of the certification
Request Payload:
{
	"name": "CompTIA A+",
	"description": "A general computer knowledge and repair course, brought to you by CompTIA!",
	"validity": "3",
	"cert_type_id": 1
}
Response:
{
    "message": "Success",
    "resp": {
        "data": {
            "id": 1,
            "name": "CompTIA A+",
            "description": "A general computer knowledge and repair course, brought to you by CompTIA!",
            "validity": "3",
            "cert_type_id": 1,
            "active": true,
            "created_by": "kyoung",
            "updated_by": "kyoung",
            "created_at": "2019-04-24T23:12:54.913Z",
            "updated_at": "2019-04-24T23:48:19.011Z",
            "deleted_at": null
        },
        "statusCode": 200
    }
}

-----------------------------------
Description: Update a resource record
Endpoint: http://localhost:3002/api/v1/resource/update-resource/id/:id
Method: PUT
Params: id - id of the resource
Request Payload:
{
	"name": "CertMaster !+",
	"link": "www.certmaster.com",
	"cert_id": 1
}
Response:
{
    "message": "Success",
    "resp": {
        "data": {
            "id": 1,
            "name": "CertMaster !+",
            "link": "www.certmaster.com",
            "cert_id": 1,
            "active": true,
            "created_by": "kyoung",
            "updated_by": "kyoung",
            "created_at": "2019-04-24T23:17:08.897Z",
            "updated_at": "2019-04-24T23:52:25.490Z",
            "deleted_at": null
        },
        "statusCode": 200
    }
}

==================================
~~DELETE~~

Description: Update a certification type record
Endpoint: http://localhost:3002/api/v1/cert-type/delete-cert-type/id/:id
Method: DELETE
Params: id - id of the certification type
Request Payload: none
Response:
{
    "message": "Success",
    "resp": {
        "data": {
            "command": "DELETE",
            "rowCount": 1,
            "oid": null,
            "rows": [],
            "fields": [],
            "_parsers": [],
            "RowCtor": null,
            "rowAsArray": false
        },
        "statusCode": 200
    }
}

-----------------------------------
Description: Update a certification record
Endpoint: http://localhost:3002/api/v1/cert/delete-cert/id/:id
Method: DELETE
Params: id - id of the certification
Request Payload: none
Response:
{
    "message": "Success",
    "resp": {
        "data": {
            "command": "DELETE",
            "rowCount": 1,
            "oid": null,
            "rows": [],
            "fields": [],
            "_parsers": [],
            "RowCtor": null,
            "rowAsArray": false
        },
        "statusCode": 200
    }
}
-----------------------------------
Description: Update a resource record
Endpoint: http://localhost:3002/api/v1/resource/delete-resource/id/:id
Method: DELETE
Params: id - id of the resource
Request Payload: none
Response:
{
    "message": "Success",
    "resp": {
        "data": {
            "command": "DELETE",
            "rowCount": 1,
            "oid": null,
            "rows": [],
            "fields": [],
            "_parsers": [],
            "RowCtor": null,
            "rowAsArray": false
        },
        "statusCode": 200
    }
}

===========================================
~~GET~~

Description: Get all the certification types from the database
Endpoint: http://localhost:3002/api/v1/certtype/
Method: GET
Params: none
Request Payload: none
Response:
[
    {
        "id": 1,
        "field": "General IT",
        "active": true,
        "created_by": "kyoung",
        "updated_by": "kyoung",
        "created_at": "2019-04-24T22:58:39.402Z",
        "updated_at": "2019-04-24T23:42:47.687Z",
        "deleted_at": null
    },
    {
        "id": 3,
        "field": "Networking",
        "active": true,
        "created_by": "kyoung",
        "updated_by": null,
        "created_at": "2019-04-25T00:40:08.517Z",
        "updated_at": "2019-04-25T00:40:08.517Z",
        "deleted_at": null
    }
]

-------------------------------------

Description: Get a certification type by its ID from the database
Endpoint: http://localhost:3002/api/v1/certtype/id/:id
Method: GET
Params: id - the certification type id
Request Payload: none
Response:
{
    "data": {
        "id": 3,
        "field": "Networking",
        "active": true,
        "created_by": "kyoung",
        "updated_by": null,
        "created_at": "2019-04-25T00:40:08.517Z",
        "updated_at": "2019-04-25T00:40:08.517Z",
        "deleted_at": null
    },
    "statusCode": 200
}

----------------------------------

Description: Get all the certifications from the database
Endpoint: http://localhost:3002/api/v1/cert/
Method: GET
Params: none
Request Payload: none
Response:
[
    {
        "id": 1,
        "name": "CompTIA A+",
        "description": "A general computer knowledge and repair course, brought to you by CompTIA!",
        "validity": "3",
        "cert_type_id": 1,
        "active": true,
        "created_by": "kyoung",
        "updated_by": "kyoung",
        "created_at": "2019-04-24T23:12:54.913Z",
        "updated_at": "2019-04-24T23:48:19.011Z",
        "deleted_at": null
    },
    {
        "id": 2,
        "name": "CompTIA Network+",
        "description": "CompTIA Network+ is the preferred qualifying credential for network maintenance and setup.",
        "validity": "4",
        "cert_type_id": 3,
        "active": true,
        "created_by": "kyoung",
        "updated_by": "kyoung",
        "created_at": "2019-04-24T23:13:13.226Z",
        "updated_at": "2019-04-25T00:47:52.409Z",
        "deleted_at": null
    }
]

-------------------------------------

Description: Get a certification by its ID from the database
Endpoint: http://localhost:3002/api/v1/cert/id/:id
Method: GET
Params: id - the certification id
Request Payload: none
Response:
{
    "data": {
        "id": 1,
        "name": "CompTIA A+",
        "description": "A general computer knowledge and repair course, brought to you by CompTIA!",
        "validity": "3",
        "cert_type_id": 1,
        "active": true,
        "created_by": "kyoung",
        "updated_by": "kyoung",
        "created_at": "2019-04-24T23:12:54.913Z",
        "updated_at": "2019-04-24T23:48:19.011Z",
        "deleted_at": null
    },
    "statusCode": 200
}

----------------------------------

Description: Get all the resources from the database
Endpoint: http://localhost:3002/api/v1/resource/
Method: GET
Params: none
Request Payload: none
Response:
[
    {
        "id": 1,
        "name": "CertMaster !+",
        "link": "www.certmaster.com",
        "cert_id": 1,
        "active": true,
        "created_by": "kyoung",
        "updated_by": "kyoung",
        "created_at": "2019-04-24T23:17:08.897Z",
        "updated_at": "2019-04-24T23:52:25.490Z",
        "deleted_at": null
    },
    {
        "id": 3,
        "name": "Professor Messer",
        "link": "www.professormesser.com",
        "cert_id": 2,
        "active": true,
        "created_by": "kyoung",
        "updated_by": null,
        "created_at": "2019-04-25T00:49:50.682Z",
        "updated_at": "2019-04-25T00:49:50.682Z",
        "deleted_at": null
    }
]

-------------------------------------

Description: Get a resource by its ID from the database
Endpoint: http://localhost:3002/api/v1/resource/id/:id
Method: GET
Params: id - the resource id
Request Payload: none
Response:
{
    "data": {
        "id": 3,
        "name": "Professor Messer",
        "link": "www.professormesser.com",
        "cert_id": 2,
        "active": true,
        "created_by": "kyoung",
        "updated_by": null,
        "created_at": "2019-04-25T00:49:50.682Z",
        "updated_at": "2019-04-25T00:49:50.682Z",
        "deleted_at": null
    },
    "statusCode": 200
}

----------------------------------